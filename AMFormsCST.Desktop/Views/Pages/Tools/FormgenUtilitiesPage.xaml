<Page
    x:Class="AMFormsCST.Desktop.Views.Pages.Tools.FormgenUtilitiesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:AMFormsCST.Desktop.Controls"
    xmlns:converters="clr-namespace:AMFormsCST.Desktop.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:AMFormsCST.Desktop.Views.Pages.Tools"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vms="clr-namespace:AMFormsCST.Desktop.ViewModels.Pages.Tools.FormgenUtils"
    xmlns:models="clr-namespace:AMFormsCST.Desktop.Models.FormgenUtilities"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:viewModels="clr-namespace:AMFormsCST.Desktop.ViewModels.Pages.Tools"
    d:DataContext="{d:DesignInstance Type=viewModels:FormgenUtilitiesViewModel,
                                     IsDesignTimeCreatable=False}"
    mc:Ignorable="d" MinWidth="1100" MinHeight="500">

    <Page.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" Invert="True" />
        <converters:NullableBoolToSymbolConverter x:Key="NullableBoolToSymbolConverter" />
        <converters:NullableBoolToTextConverter x:Key="NullableBoolToTextConverter" />
        <converters:StringListToStringConverter x:Key="StringListToStringConverter" />
        <converters:EnumValuesConverter x:Key="EnumValuesConverter" />
        <converters:IntToDoubleConverter x:Key="IntToDoubleConverter" />
    </Page.Resources>

    <Grid Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="250" MaxWidth="500" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Left Panel: File Operations and TreeView  -->
        <Grid Grid.Column="0" Margin="0,0,12,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Vertical">
                <ui:Button
                    Appearance="Primary"
                    Command="{Binding OpenFormgenFileCommand}"
                    Content="Open"
                    Icon="{ui:SymbolIcon Document24}" />
                <ui:Button
                    Margin="0,8,0,0"
                    Appearance="Success"
                    Command="{Binding SaveFormgenFileCommand}"
                    Content="Save"
                    Icon="{ui:SymbolIcon Save24}"
                    IsEnabled="{Binding HasChanged}" />
                <ui:Button
                    Margin="0,8,0,0"
                    Appearance="Secondary"
                    Command="{Binding LoadBackupCommand}"
                    Content="Load Backup"
                    Icon="{ui:SymbolIcon History24}"
                    IsEnabled="{Binding IsFileLoaded}" />
                <ui:Button
                    Margin="0,8,0,0"
                    Appearance="Danger"
                    Command="{Binding ClearFileCommand}"
                    Content="Close"
                    Icon="{ui:SymbolIcon Dismiss24}"
                    IsEnabled="{Binding IsFileLoaded}" />
            </StackPanel>

            <Border
                Grid.Row="1"
                Margin="0,12,0,0"
                Padding="8"
                Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}"
                BorderThickness="1"
                CornerRadius="4">
                <Grid>
                    <ui:ProgressRing
                        IsIndeterminate="True"
                        Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <TreeView
                        ItemsSource="{Binding TreeViewNodes}"
                        Style="{StaticResource {x:Type TreeView}}"
                        Visibility="{Binding IsFileLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TreeView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type vms:TreeItemNodeViewModel}" ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Header}" />
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>

                    <Label
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="Load a .formgen file to begin"
                        Visibility="{Binding IsFileLoaded, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                </Grid>
            </Border>
        </Grid>

        <!--  Right Panel: Properties (wrapped in its own ScrollViewer)  -->
        <ScrollViewer
            Grid.Column="1"
            IsEnabled="{Binding IsFileLoaded}"
            VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical">
                <ui:CardControl Header="Form Details" HorizontalContentAlignment="Left">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Form Title" />
                        <ui:TextBox Margin="0,4,0,0" Text="{Binding FormTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Margin="0,12,0,0" Text="Form UUID" />
                        <Grid Margin="0,4,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ui:TextBox Grid.Column="0" IsReadOnly="True" Text="{Binding Uuid}" />
                            <ui:Button
                                Grid.Column="1"
                                Margin="8,0,0,0"
                                Appearance="Secondary"
                                Command="{Binding RegenerateUuidCommand}"
                                Content="Regenerate"
                                Icon="{ui:SymbolIcon ArrowSync24}" />
                        </Grid>
                    </StackPanel>
                </ui:CardControl>

                <ui:CardControl Margin="0,12,0,0" Header="Image Options" HorizontalContentAlignment="Left">
                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ui:SymbolIcon
                                Grid.Column="0"
                                FontSize="16"
                                Symbol="{Binding IsImageFound, Converter={StaticResource NullableBoolToSymbolConverter}}" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                Text="{Binding IsImageFound, Converter={StaticResource NullableBoolToTextConverter}}" />
                        </Grid>

                        <ui:ToggleSwitch
                            Margin="0,8,0,0"
                            Content="Rename image"
                            IsChecked="{Binding ShouldRenameImage, Mode=TwoWay}"
                            IsEnabled="{Binding IsImageFound, Converter={StaticResource BooleanToVisibilityConverter}}"
                            OffContent="No"
                            OnContent="Yes" />
                    </StackPanel>
                </ui:CardControl>

                <ItemsControl ItemsSource="{Binding SelectedNodeProperties}">
                    <ItemsControl.Resources>
                        <DataTemplate x:Key="StringEditorTemplate" DataType="{x:Type models:DisplayProperty}">
                            <ui:TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                        <DataTemplate x:Key="IntEditorTemplate" DataType="{x:Type models:DisplayProperty}">
                            <ui:NumberBox Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToDoubleConverter}}" />
                        </DataTemplate>
                        <DataTemplate x:Key="BoolEditorTemplate" DataType="{x:Type models:DisplayProperty}">
                            <ui:ToggleSwitch IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                        <DataTemplate x:Key="EnumEditorTemplate" DataType="{x:Type models:DisplayProperty}">
                            <ComboBox ItemsSource="{Binding Type, Converter={StaticResource EnumValuesConverter}}"
              SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                        <DataTemplate x:Key="ListStringEditorTemplate" DataType="{x:Type models:DisplayProperty}">
                            <ui:TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringListToStringConverter}}"
                AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" MinHeight="80" />
                        </DataTemplate>
                        <DataTemplate x:Key="ReadOnlyEditorTemplate" DataType="{x:Type models:DisplayProperty}">
                            <Label Content="{Binding Value}" VerticalAlignment="Center" />
                        </DataTemplate>
                        <models:DisplayPropertyTemplateSelector x:Key="DisplayPropertyTemplateSelector"
    StringTemplate="{StaticResource StringEditorTemplate}"
    IntTemplate="{StaticResource IntEditorTemplate}"
    BoolTemplate="{StaticResource BoolEditorTemplate}"
    EnumTemplate="{StaticResource EnumEditorTemplate}"
    ListStringTemplate="{StaticResource ListStringEditorTemplate}"
    ReadOnlyTemplate="{StaticResource ReadOnlyEditorTemplate}" />
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:DisplayProperty}">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="{Binding Name}" FontWeight="SemiBold" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                <!-- Editable controls based on type and IsReadOnly -->
                                <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource DisplayPropertyTemplateSelector}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
